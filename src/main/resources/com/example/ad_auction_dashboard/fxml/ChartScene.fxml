<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.DatePicker?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.BorderPane?>
<?import javafx.scene.layout.HBox?>

<BorderPane prefHeight="620.0" prefWidth="912.0" xmlns="http://javafx.com/javafx/23.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.ad_auction_dashboard.controller.ChartSceneController">
    <bottom>

              <!-- Global time controls could go here -->
              <HBox alignment="CENTER" spacing="10">
                  <Label text="Time Range:" />
                  <!-- DatePickers for start/end (with defaults set from campaign start/end) -->
                  <DatePicker fx:id="startDatePicker" />
                  <DatePicker fx:id="endDatePicker" />
                  <!-- A button to update all charts with the new time range -->
                  <Button fx:id="updateTimeButton" text="Update Time" onAction="#handleUpdateTime"/>
           <!-- A button to add another chart next to the existing ones -->
           <Button fx:id="addChartButton" onAction="#handleAddChart" prefHeight="2.0" prefWidth="144.0" text="Add Chart"> </Button>
              </HBox>


    </bottom>
   <center>
      <AnchorPane prefHeight="200.0" prefWidth="200.0" BorderPane.alignment="CENTER">
         <children>
              <HBox fx:id="chartContainer" alignment="CENTER" spacing="20">
            <!-- Initially one ChartPane is loaded (could be loaded dynamically as well) -->
            <!-- ChartPane is a custom component you design (see next step) -->
        </HBox>
              <Button fx:id="metricsViewButton" layoutX="14.0" layoutY="45.0" onAction="#handleMetricsView" text="Metrics View" />
         </children>
      </AnchorPane>
   </center>
</BorderPane>
